/**
 *  \file cpul_cpuop_opcodes.def
 *  List of logical operations, supported by TDS and vpul-translator:
 *  PU type, pointer to function for calculating number of MPRBs needed
 * This file is used to build different LUTs in VPUL code in a consistent matter.
 * list of logical operations, implemented by cpuoper
 *	         Interface Opcode ,		FW_OPCODE,  				CPU_OPER SUPORTED OR NOT */

CPU_OPER_ENTRY(VPUL_OP_CTRL_COPY_WORK_TO_VEC,	VPUC_OP_CTRL_COPY_WORK_TO_VEC,		0)
CPU_OPER_ENTRY(VPUL_OP_EQHIST_CREATE_LUT,	VPUC_OP_EQHIST_CREATE_LUT,		1)
CPU_OPER_ENTRY(VPUL_OP_CTRL_CH_LOOP,		VPUC_OP_CTRL_CH_LOOP,			1)
CPU_OPER_ENTRY(VPUL_OP_CTRL_SEP_FILT_FROM_FRAC,	VPUC_OP_CTRL_SEP_FILT_FROM_FRAC,	1)
CPU_OPER_ENTRY(VPUL_OP_HW_UPDATE_M2LI_RECORD,	VPUC_OP_HW_UPDATE_M2LI_RECORDS,		1)
CPU_OPER_ENTRY(VPUL_OP_HW_CNN_CHECK_BAD_INPU,	VPUC_OP_HW_CNN_CHECK_BAD_INPUT,		1)
CPU_OPER_ENTRY(VPUL_OP_HW_CNN_CHECK_OVERFLOW,	VPUC_OP_HW_CNN_CHECK_OVERFLOW,		1)
CPU_OPER_ENTRY(VPUL_OP_HW_INTIMG_CHECK_OVFL,	VPUC_OP_HW_INTIMG_CHECK_OVFL,		1)
CPU_OPER_ENTRY(VPUL_OP_HW_POST_PROC_HIST_RES,	VPUC_OP_HW_POST_PROC_HIST_RES,		1)
CPU_OPER_ENTRY(VPUL_OP_LK_STAT_UP_PT_CH_THR,	VPUC_OP_LK_STAT_UP_PT_CH_THR,		1)
CPU_OPER_ENTRY(VPUL_OP_LK_UPDATE_PT_BY_XY_OFS,	VPUC_OP_LK_UPDATE_PT_BY_XY_OFS,		1)
CPU_OPER_ENTRY(VPUL_OP_FLM_UPDATE_VEC,		VPUC_OP_FLM_UPDATE_VEC,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_ADD_INT,		VPUC_OP_SC_ADD_INT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_ADD_FLOAT,		VPUC_OP_SC_ADD_FLOAT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_ADD_CONST_TO_INT,	VPUC_OP_SC_ADD_CONST_TO_INT,		1)
CPU_OPER_ENTRY(VPUL_OP_SC_ADD_CONST_TO_FL,	VPUC_OP_SC_ADD_CONST_TO_FL,		1)
CPU_OPER_ENTRY(VPUL_OP_SC_WEIGHTED_ADD_INT,	VPUC_OP_SC_WEIGHTED_ADD_INT,		0)
CPU_OPER_ENTRY(VPUL_OP_SC_WEIGHTED_ADD_FLOAT,	VPUC_OP_SC_WEIGHTED_ADD_FLOAT,		0)
CPU_OPER_ENTRY(VPUL_OP_SC_SUBTRACT_INT,		VPUC_OP_SC_SUBTRACT_INT,		1)
CPU_OPER_ENTRY(VPUL_OP_SC_SUBTRACT_FLOAT,	VPUC_OP_SC_SUBTRACT_FLOAT,		0)
CPU_OPER_ENTRY(VPUL_OP_SC_MULTIPLY_INT,		VPUC_OP_SC_MULTIPLY_INT,		1)
CPU_OPER_ENTRY(VPUL_OP_SC_MULTIPLY_FLOAT,	VPUC_OP_SC_MULTIPLY_FLOAT,		1)
CPU_OPER_ENTRY(VPUL_OP_SC_DIVIDE_INT,		VPUC_OP_SC_DIVIDE_INT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_DIVIDE_FLOAT,		VPUC_OP_SC_DIVIDE_FLOAT,		1)
CPU_OPER_ENTRY(VPUL_OP_SC_ABS_INT,		VPUC_OP_SC_ABS_INT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_ABS_FLOAT,		VPUC_OP_SC_ABS_FLOAT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_AND,			VPUC_OP_SC_AND,				1)
CPU_OPER_ENTRY(VPUL_OP_SC_OR,			VPUC_OP_SC_OR,				1)
CPU_OPER_ENTRY(VPUL_OP_SC_XOR,			VPUC_OP_SC_XOR,				1)
CPU_OPER_ENTRY(VPUL_OP_SC_NOT,			VPUC_OP_SC_NOT,				1)
CPU_OPER_ENTRY(VPUL_OP_SC_SH_LEFT,		VPUC_OP_SC_SH_LEFT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_SH_RIGHT,		VPUC_OP_SC_SH_RIGHT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_FLOAT,		VPUC_OP_SC_FLOAT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_ROUND,		VPUC_OP_SC_ROUND,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_FLOOR,		VPUC_OP_SC_FLOOR,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_CEIL,			VPUC_OP_SC_CEIL,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_TURNC,		VPUC_OP_SC_TURNC,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_SQRT,			VPUC_OP_SC_SQRT,			1)
CPU_OPER_ENTRY(VPUL_OP_SC_EXP,			VPUC_OP_SC_EXP,				1)
CPU_OPER_ENTRY(VPUL_OP_SC_LOG,			VPUC_OP_SC_LOG,				1)
CPU_OPER_ENTRY(VPUL_OP_MAT_ADD,			VPUC_OP_MAT_ADD,			0)
CPU_OPER_ENTRY(VPUL_OP_MAT_ADD_CONST,		VPUC_OP_MAT_ADD_CONST,			0)
CPU_OPER_ENTRY(VPUL_OP_MAT_WEIGHTED_ADD,	VPUC_OP_MAT_WEIGHTED_ADD,		0)
CPU_OPER_ENTRY(VPUL_OP_MAT_SUBTRACT,		VPUC_OP_MAT_SUBTRACT,			0)
CPU_OPER_ENTRY(VPUL_OP_MAT_MULT,		VPUC_OP_MAT_MULT,			0)
CPU_OPER_ENTRY(VPUL_OP_MAT_MULT_ELEMENTS,	VPUC_OP_MAT_MULT_ELEMENTS,		0)
CPU_OPER_ENTRY(VPUL_OP_MAT_DIV_ELEMENTS,	VPUC_OP_MAT_DIV_ELEMENTS,		0)
CPU_OPER_ENTRY(VPUL_OP_STAT_MAX_MIN,		VPUC_OP_STAT_MAX_MIN,			0)
CPU_OPER_ENTRY(VPUL_OP_STAT_MEAN_VAR,		VPUC_OP_STAT_MEAN_VAR,			0)
CPU_OPER_ENTRY(VPUL_OP_STAT_CREATE_HISTOGRAM,	VPUC_OP_STAT_CREATE_HISTOGRAM,		0)
CPU_OPER_ENTRY(VPUL_OP_CPY_PU_RSLTS_2_PU_PRMS,	VPUC_OP_CTRL_COPY_WORK_TO_VEC,		1)
CPU_OPER_ENTRY(VPUL_OP_WRITE_RPRT_PU_RSLTS,	VPUC_OP_CTRL_COPY_WORK_TO_VEC,		1)


